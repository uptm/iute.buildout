# Buildout Configuration File for site-specific settings for the Zope Server
[buildout]

# If are you using a PYPI local, you can enabled the following lines ad define your own PYPI local.
# For options see http://www.coactivate.org/projects/ploneve/instalar-y-configurar-su-propio-repositorio-de-pyp%7Exadi%7Exad
#index = 
#    http://pypi.fundacite-merida.gob.ve/

extends = buildout.cfg

parts += 
    commons-requeriments
    instance
    patching-buildout

# ID Plone Website
site-id = website

# This recipe automates installation of common requeriments
# For options see http://pypi.python.org/pypi/plone.recipe.command
[commons-requeriments] 
recipe = plone.recipe.command

# Command to run when the buildout part is installed.
command = 
    aptitude update
    aptitude install -y rsync

# Command to run when the buildout part is updated. This happens when buildout 
# is run but the configuration for this buildout part has not changed.
update-command = ${commons-requeriments:command} 

# When yes, on or true, buildout will stop if the command ends with a non zero exit code.
stop-on-error = no

############################################################################## 
# The Zope Server configuration 
##############################################################################

[zopeserver]
# start with offbeat password, and hint that it should be made unique in-site:
user = admin:admin
# Zope Web Server Effective user
effective-user = plone
# Zope Web Server IP number
host = 127.0.0.1
# Set to 'on' to turn on debug mode in Zope. Defaults to 'off'.
debug-mode = on
# Set to 'on' to turn on verbose security (and switch to the Python security implementation).
# Defaults to 'off' (and the C security implementation).
verbose-security = on

############################################################################## 
# The hosts address that the bellow services will be listening on
##############################################################################

[hosts]
# Zope Web Server
http-address = ${zopeserver:host}
# Zope FTP Server
ftp-address = ${zopeserver:host}
# Zope WebDAV Server
webdav-address = ${zopeserver:host}
# RDBS Server
rdbs-address = ${hosts:http-address}
# Varnish Server
varnish-address = ${hosts:http-address}
# HAProxy Server
haproxy-address = ${hosts:http-address}

############################################################################## 
# The Port numbers that the bellow services will be listening on
##############################################################################

[ports]
# Zope Web Server Port number
http-address = 8080
# Zope FTP Server Port number
ftp-address = 8021
# Zope WebDAV Server Port number
webdav-address = 8280
# RDBS Server
rdbs-address = 5432
# Supervisor Server Port number
supervisor = 8090
# Varnish Server Port number
varnish = 8091
# HAProxy Server Port number
haproxy = 8092

############################################################################## 
# The user that run the bellow services
##############################################################################

[user]
# HAProxy user
haproxy = proxy
# Varnish user
varnish = root
# Supervisor user
supervisor-user = admin
supervisor-password = zujDZT5x


[production-server]
# Production Domain Name server or IP
dns = canaima.softwarelibre.gob.ve
# Production Hosting SSH User
user = root
# Production Hosting SSH Password
password = clave-secreta


[backup-server]
# Backup Domain Name server or IP
dns-bnk = cnti11.canaima.softwarelibre.gob.ve
# Backup Hosting SSH User
user-bnk = usuario
# Backup Hosting SSH Password
password-bnk = clave-secreta

############################################################################## 
# The Default Zope Server instance configuration 
##############################################################################


# Use this section to install and configure a Zope operating
# instance.
# For options see http://pypi.python.org/pypi/plone.recipe.zope2instance
[instance]

# The filename for the Z2 access log. Defaults to var/log/${partname}-Z2.log.
#z2-log = off

# Set the log level for the access log. 
# Level may be any of CRITICAL, ERROR, WARN, INFO, DEBUG, or ALL. Defaults to .
z2-log-level = WARN

# Set the level of the console output for the event log. 
# Level may be any of CRITICAL, ERROR, WARN, INFO, DEBUG, or ALL. Defaults to INFO.
event-log-level = INFO

# Define arbitrary key-value pairs for use as environment variables during Zope's run cycle.
environment-vars +=
    TMP /var/tmp
    PTS_LANGUAGES en, es, pt
#    zope_i18n_allowed_languages en pt es
#    zope_i18n_compile_mo_files true

# This controls what character set is used to encode unicode data 
# that reaches ZPublisher without any other specified encoding. This defaults to 'utf-8'.
#default-zpublisher-encoding iso-8859-15
default-zpublisher-encoding = utf-8


# This recipe helps to apply some patches on buildout.cfg file 
# For options see http://plone.org/documentation/kb/setup-ipython-for-zope
[patching-buildout]
recipe = plone.recipe.command

# Command to run when the buildout part is installed.
command = 
    patch ${buildout:directory}/buildout.cfg < ${buildout:directory}/patches/buildout.patch

# Command to run when the buildout part is updated. This happens when buildout 
# is run but the configuration for this buildout part has not changed.
#update-command = ${patching-buildout:command} 

# When yes, on or true, buildout will stop if the command ends with a non zero exit code.
stop-on-error = no
