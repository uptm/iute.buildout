# Buildout Configuration File for Backup products
[buildout]

extends = 00-site-basics-05-pil.cfg

parts +=
    backup-requeriments
    backups-dir-setup
    backup
    zodb-pack
    zodb-pack-cli
    zodb-pack-weekly
    backup-daily
    backup-weekly
#    move-zodb-back

# This recipe automates installation of varnish requeriments
# For options see http://pypi.python.org/pypi/plone.recipe.command
[backup-requeriments] 
recipe = plone.recipe.command
command = 
    aptitude install -y rsync

# This recipe define different directories for full backup or snapshot methods.
# For options see http://pypi.python.org/pypi/plone.recipe.command
[backups-dir-setup]
recipe = plone.recipe.command
command = 
    mkdir ${backup:location}/iute
    mkdir ${backup:snapshotlocation}/iute

# This recipe builds the backup, restore and snapshotbackup commands.
# For options see http://pypi.python.org/pypi/collective.recipe.backup
[backup]
# By default, incremental backups are made. 
# If this option is set to 'true', bin/backup will always make a full backup.
full = true

# Use repozo's zipping functionality. 'true' by default. 
# Set it to 'false' and repozo will notgzip its files. 
# Note that gzipped databases are called *.fsz, not *.fs.gz.
gzip = true

# Location where backups are stored.
# Defaults to var/backups inside the buildout directory.
location = 
    ${buildout:directory}/var/backups/
    ${buildout:directory}/var/backups/iute

# Location where snapshot defaults are stored.
# Defaults to var/snapshotbackups inside the buildout directory.
snapshotlocation = 
    ${buildout:directory}/var/snapshotbackups/
    ${buildout:directory}/var/snapshotbackups/iute

# In case the Data.fs isn't in the default 
# var/filestorage/Data.fs location, this option can overwrite it.
datafs = 
    ${buildout:directory}/var/filestorage/Data.fs
    ${buildout:directory}/var/filestorage/iute/Data.fs

# Advanced option, only needed when you have split 
# for instance a catalog.fs out of the regular Data.fs. 
# Use it to specify the extra filestorages.
additional_filestorages =
    iute

# This recipe helps to initializes a zodb pack script
# For options see http://pypi.python.org/pypi/collective.recipe.template
[zodb-pack]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/zodbpack.tmpl
output = ${buildout:directory}/bin/zodbpack

# This recipe helps to chance mode to zodb pack script
# For options see http://pypi.python.org/pypi/plone.recipe.command
[zodb-pack-cli]
recipe = plone.recipe.command
command = 
    chmod +x ${buildout:directory}/bin/zodbpack


# This recipe helps to configure a weekly zodb pack crontab job.
# For options see http://pypi.python.org/pypi/z3c.recipe.usercrontab
[zodb-pack-weekly]
recipe = z3c.recipe.usercrontab
times = 0 3 * * 7
keep = 0
gzip = true
command = ${buildout:directory}/bin/zodbpack > ${buildout:directory}/var/log/pack_zope.log 2>&1


# This recipe helps to configure a daily backup crontab job.
# For options see http://pypi.python.org/pypi/z3c.recipe.usercrontab
[backup-daily]
recipe = z3c.recipe.usercrontab
times = 0 3 * * 0-6
keep = 0
gzip = true
command = ${buildout:directory}/bin/backup


# This recipe helps to configure a weekly backup crontab job.
# For options see http://pypi.python.org/pypi/z3c.recipe.usercrontab
[backup-weekly]
recipe = z3c.recipe.usercrontab
times = 0 3 * * 7
keep = 0
gzip = true
command = ${buildout:directory}/bin/snapshotbackup


# This recipe aids the creation and management of multiple Zope 2 filestorages.
# For options see http://pypi.python.org/pypi/collective.recipe.filestorage
#[filestorage]
#recipe = collective.recipe.filestorage

# The location of the Data.fs file, relative to the buildout root directory. Defaults to var/filestorage/%(fs_part_name)s/Data.fs
#location = var/filestorage/%(fs_part_name)s/%(fs_part_name)s.fs

# The name of the ZODB. Defaults to '%(fs_part_name)s'.
#zodb-name = %(fs_part_name)s

# Set the ZODB cache size, i.e. the number of objects which the ZODB cache will try to hold. Inherits from the associated zope part. Defaults to 5000.
#zodb-cache-size = 1000

# Set the path to the mountpoint. Defaults to '/%(fs_part_name)s'.
#zodb-mountpoint = /%(fs_part_name)s_mountpoint

# Set the class of the object being mounted. Defaults to not being set.
#zodb-container-class = Products.ATContentTypes.content.folder.ATFolder

# A list of filestorage sub-parts to be generated, one per line. (This is different from buildout parts.)
#parts =
#   unitus
#   peps
#   specialclient

#[filestorage_specialclient]
#zodb-mountpoint = /someothervalue
# other override values
# Add new filestorage parts here.


# This recipe helps to copy backup data from one place to another via rsync with a crontab job.
# For options see http://pypi.python.org/pypi/z3c.recipe.usercrontab
#[move-zodb-back]
#recipe = z3c.recipe.usercrontab
#times = 0 3 * * 7
#keep = 0
#gzip = true
#command = 
#    rsync -av ${buildout:directory}/var/backups/* ${hosts:user-bnk}@${hosts:dns-bnk}:/home/${hosts:user-bnk}/Backups/Plone/zodb/
#    rsync -av ${buildout:directory}/var/backups/iute ${hosts:user-bnk}@${hosts:dns-bnk}:/home/${hosts:user-bnk}/Backups/Plone/zodb/
#    rsync -av ${buildout:directory}/var/snapshotbackups/* ${hosts:user-bnk}@${hosts:dns-bnk}:/home/${hosts:user-bnk}/Backups/Plone/zodb/
#    rsync -av ${buildout:directory}/var/snapshotbackups/iute ${hosts:user-bnk}@${hosts:dns-bnk}:/home/${hosts:user-bnk}/Backups/Plone/zodb/
